name: CI

on:
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  sqllite-check:
    name: SQL Lite Check
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        php-version: ['7.2', '7.3', '7.4', '8.0', '8.1']

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pdo, pdo_sqlite, zip

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Copy properties
        run: cp test/properties.ci.inc.php test/properties.inc.php

      - name: Run PHPUnit
        run: vendor/bin/phpunit -c ./test/sqlite.phpunit.xml

  mysql-check:
    name: MySQL Check
    runs-on: ubuntu-20.04

    services:
      mysql:
        image: "mysql:5.6"

        options: >-
          --health-cmd "mysqladmin ping --silent"
          -e MYSQL_ALLOW_EMPTY_PASSWORD=yes
          -e MYSQL_DATABASE=xpdotest
        ports:
          - 3306:3306

    strategy:
      matrix:
        php-version: ['7.2', '7.3', '7.4', '8.0', '8.1']

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pdo, pdo_mysql, zip, mysqli

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Copy properties
        run: cp test/properties.ci.inc.php test/properties.inc.php

      - name: Run PHPUnit
        run: vendor/bin/phpunit -c ./test/mysql.phpunit.xml

  postgresql-check:
    name: PostgreSQL Check
    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:9.6

        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: xpdotest

        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        ports:
          - 5432:5432

    strategy:
      matrix:
        php-version: ['7.2', '7.3', '7.4', '8.0', '8.1']

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pdo, zip, php_pgsql

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Copy properties
        run: cp test/properties.ci.inc.php test/properties.inc.php

      - name: Run PHPUnit
        run: vendor/bin/phpunit -c ./test/pgsql.phpunit.xml
