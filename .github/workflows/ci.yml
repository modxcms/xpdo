name: CI

on:
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  sqllite-check:
    name: SQL Lite Check
    runs-on: ubuntu-20.04
    
    strategy:
      matrix:
        php-version:
          - 5.6
          - 7.0
          - 7.1
          - 7.2
          - 7.3
          - 7.4
          - 8.0
        deps:
          - highest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: pdo, pdo_sqlite, zip

    - name: Install dependencies with Composer
      uses: ramsey/composer-install@v1
      with:
        dependency-versions: ${{ matrix.deps }}
      
    - name: Copy properties
      run: cp test/properties.travis.inc.php test/properties.inc.php  

    - name: Run PHPUnit
      run: vendor/bin/phpunit -c ./test/sqlite.phpunit.xml

  mysql-check:
    name: MySQL Check
    runs-on: ubuntu-20.04

    env:
      DB_ADAPTER: mysql
      DB_HOST: 127.0.0.1
      DB_NAME: xpdotest
      DB_USERNAME: root
      DB_PASSWORD: notroot

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: notroot
          MYSQL_DATABASE: xpdotest
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    strategy:
      matrix:
        php-version:
          - 5.6
          - 7.0
          - 7.1
          - 7.2
          - 7.3
          - 7.4
          - 8.0
        deps:
          - highest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Start mysql service
      run: sudo /etc/init.d/mysql start

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: pdo, pdo_mysql, zip, mysqli

    - name: Install dependencies with Composer
      uses: ramsey/composer-install@v1
      with:
        dependency-versions: ${{ matrix.deps }}
      
    - name: Copy properties
      run: cp test/properties.travis.inc.php test/properties.inc.php  

    - name: Run PHPUnit
      run: vendor/bin/phpunit -c ./test/mysql.phpunit.xml
              
